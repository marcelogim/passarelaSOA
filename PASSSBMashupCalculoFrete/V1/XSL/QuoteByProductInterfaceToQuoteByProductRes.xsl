<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0"
                xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction"
                xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction"
                xmlns:ns0="http://TargetNamespace.com/RestService_QuoteByProduct_response"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:tns="http://TargetNamespace.com/IntelipostQuoteByProductPS_quote_by_product_response"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions"
                xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction"
                exclude-result-prefixes="xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction"
                xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd">
    <oracle-xsl-mapper:schema>
        <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
        <oracle-xsl-mapper:mapSources>
            <oracle-xsl-mapper:source type="XSD">
                <oracle-xsl-mapper:schema location="../Resources/nxsd_schema_QuoteByProductRes.xsd"/>
                <oracle-xsl-mapper:rootElement name="Root-Element"
                                               namespace="http://TargetNamespace.com/RestService_QuoteByProduct_response"/>
            </oracle-xsl-mapper:source>
        </oracle-xsl-mapper:mapSources>
        <oracle-xsl-mapper:mapTargets>
            <oracle-xsl-mapper:target type="XSD">
                <oracle-xsl-mapper:schema location="../Resources/nxsd_schema_InterfaceQuoteByProductRes.xsd"/>
                <oracle-xsl-mapper:rootElement name="Root-Element"
                                               namespace="http://TargetNamespace.com/IntelipostQuoteByProductPS_quote_by_product_response"/>
            </oracle-xsl-mapper:target>
        </oracle-xsl-mapper:mapTargets>
        <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [TUE FEB 20 17:14:54 BRT 2018].-->
    </oracle-xsl-mapper:schema>
    <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
    <xsl:template match="/">
        <tns:Root-Element>
            <!--<tns:status>
                <xsl:value-of select="/ns0:Root-Element/ns0:status"/>
            </tns:status>
            <xsl:for-each select="/ns0:Root-Element/ns0:messages">
                <tns:messages>
                    <tns:type>
                        <xsl:value-of select="ns0:type"/>
                    </tns:type>
                    <tns:text>
                        <xsl:value-of select="ns0:text"/>
                    </tns:text>
                    <tns:key>
                        <xsl:value-of select="ns0:key"/>
                    </tns:key>
                </tns:messages>
            </xsl:for-each>-->
            <xsl:for-each select="/ns0:Root-Element/ns0:content/ns0:delivery_options">
                <tns:shippingMethods>
                    <tns:shippingCost>
                        <xsl:value-of select="ns0:final_shipping_cost"/>
                    </tns:shippingCost>
                    <tns:shippingTax>
                        <xsl:value-of select="ns0:provider_shipping_cost"/>
                    </tns:shippingTax>
                    <tns:shippingTotal>
                        <xsl:value-of select="ns0:provider_shipping_cost"/>
                    </tns:shippingTotal>
                    <tns:deliveryDays>
                        <xsl:value-of select="ns0:delivery_estimate_business_days"/>
                    </tns:deliveryDays>
                 
                    <tns:estimatedDeliveryDate>
                        <xsl:value-of select="xp20:add-dayTimeDuration-to-dateTime (xp20:current-dateTime ( ), ns0:delivery_estimate_business_days )"/>
                    </tns:estimatedDeliveryDate>
                    <tns:displayName>
                        <xsl:value-of select="ns0:description"/>
                    </tns:displayName>
                    <tns:currency>BRL</tns:currency>
                </tns:shippingMethods>
            </xsl:for-each>
        </tns:Root-Element>
    </xsl:template>
</xsl:stylesheet>
