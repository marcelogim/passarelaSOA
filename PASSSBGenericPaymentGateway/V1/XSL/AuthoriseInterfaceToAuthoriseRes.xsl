<xsl:stylesheet version="1.0" exclude-result-prefixes="xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:ns0="http://TargetNamespace.com/AdyenPaymentGateway_authoriseGeneric_response" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:tns="http://TargetNamespace.com/AdyenPaymentGateway_authorise_int_response" xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd" xmlns:ns1="http://TargetNamespace.com/AdyenPaymentGateway_authorise_int_request" xmlns:n2="http://TargetNamespace.com/AdyenPaymentGateway_authorise_int_response" xmlns:xs1="http://www.w3.org/2001/XMLSchema">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../Resources/Generic/nxsd_authorisePaymentResp.xsd"/>
        <oracle-xsl-mapper:rootElement name="Root-Element" namespace="http://TargetNamespace.com/AdyenPaymentGateway_authoriseGeneric_response"/>
      </oracle-xsl-mapper:source>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../Resources/Generic/nxsd_InterfaceAuthorisePaymentReq.xsd"/>
        <oracle-xsl-mapper:rootElement name="Root-Element" namespace="http://TargetNamespace.com/AdyenPaymentGateway_authorise_int_request"/>
        <oracle-xsl-mapper:param name="bodyRequest"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../Resources/Generic/nxsd_InterfaceAuthorisePaymentRes.xsd"/>
        <oracle-xsl-mapper:rootElement name="Root-Element" namespace="http://TargetNamespace.com/AdyenPaymentGateway_authorise_int_response"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [WED FEB 21 13:27:33 BRT 2018].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:param name="bodyRequest"/>
  <xsl:param name="currentMileseconds"/>
  <xsl:template match="/">
    <tns:Root-Element>
      <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:locale">
        <tns:locale>
          <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:locale"/>
        </tns:locale>
      </xsl:if>
      <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:referenceNumber">
        <tns:referenceNumber>
          <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:referenceNumber"/>
        </tns:referenceNumber>
      </xsl:if>
      <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:orderId">
        <tns:orderId>
          <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:orderId"/>
        </tns:orderId>
      </xsl:if>
      <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:currencyCode">
        <tns:currencyCode>
          <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:currencyCode"/>
        </tns:currencyCode>
      </xsl:if>
      <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:transactionId">
        <tns:transactionId>
          <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:transactionId"/>
        </tns:transactionId>
      </xsl:if>
      <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:paymentId">
        <tns:paymentId>
          <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:paymentId"/>
        </tns:paymentId>
      </xsl:if>
      <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:amount">
        <tns:amount>
          <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:amount"/>
        </tns:amount>
      </xsl:if>
      <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:transactionType">
        <tns:transactionType>
          <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:transactionType"/>
        </tns:transactionType>
      </xsl:if>
      <!--<tns:hostTransactionTimestamp>
        <xsl:value-of select='xp20:format-dateTime (xp20:current-dateTime ( ), "[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]+0000" )'/>
      </tns:hostTransactionTimestamp>-->
      <tns:transactionTimestamp>
        <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:transactionTimestamp"/>
      </tns:transactionTimestamp>
      <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:paymentMethod">
        <tns:paymentMethod>
          <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:paymentMethod"/>
        </tns:paymentMethod>
      </xsl:if>
      <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:gatewayId">
        <tns:gatewayId>
          <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:gatewayId"/>
        </tns:gatewayId>
      </xsl:if>
      <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:siteId">
        <tns:siteId>
          <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:siteId"/>
        </tns:siteId>
      </xsl:if>
      <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:channel">
        <tns:channel>
          <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:channel"/>
        </tns:channel>
      </xsl:if>
      <tns:PONumber>
        <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:PONumber"/>
      </tns:PONumber>
      <tns:merchantTransactionTimestamp>
        <xsl:value-of select="$currentMileseconds"/>
      </tns:merchantTransactionTimestamp>
      <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:transactionId">
        <tns:merchantTransactionId>
          <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:transactionId"/>
        </tns:merchantTransactionId>
      </xsl:if>
      <xsl:if test="/ns0:Root-Element/ns0:pspReference">
        <tns:authorizationResponse>
          <xsl:if test="/ns0:Root-Element/ns0:resultCode = 'Authorised' or /ns0:Root-Element/ns0:resultCode = 'Received' ">
            <tns:responseCode>1000</tns:responseCode>
          </xsl:if>
          <xsl:if test="/ns0:Root-Element/ns0:resultCode = 'Refused' ">
            <tns:responseCode>9000</tns:responseCode>
          </xsl:if>
          <!--<xsl:if test="/ns0:Root-Element/ns0:resultCode = 'Authorised' and not($bodyRequest/ns1:Root-Element/ns1:gatewayId)">
            <tns:responseCode>1000</tns:responseCode>
          </xsl:if>-->
          <!--<xsl:if test="/ns0:Root-Element/ns0:resultCode = 'Authorised' and $bodyRequest/ns1:Root-Element/ns1:gatewayId">
            <tns:responseCode>10000</tns:responseCode>
          </xsl:if>-->
          <xsl:if test="/ns0:Root-Element/ns0:message">
            <tns:responseReason>
              <xsl:value-of select="/ns0:Root-Element/ns0:message"/>
            </tns:responseReason>
          </xsl:if>
          <xsl:if test="/ns0:Root-Element/ns0:resultCode">
            <tns:responseDescription>
              <xsl:value-of select="/ns0:Root-Element/ns0:resultCode"/>
            </tns:responseDescription>
          </xsl:if>
          <xsl:if test="/ns0:Root-Element/ns0:authCode">
            <tns:authorizationCode>
              <xsl:value-of select="/ns0:Root-Element/ns0:authCode"/>
            </tns:authorizationCode>
          </xsl:if>
          <xsl:if test="/ns0:Root-Element/ns0:pspReference">
            <tns:hostTransactionId>
              <xsl:value-of select="/ns0:Root-Element/ns0:pspReference"/>
            </tns:hostTransactionId>
          </xsl:if>
          <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:transactionId">
            <tns:merchantTransactionId>
              <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:transactionId"/>
            </tns:merchantTransactionId>
          </xsl:if>
          <!--<tns:merchantTransactionTimestamp>
            <xsl:value-of select='xp20:format-dateTime (xp20:current-dateTime ( ), "[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]" )'/>
          </tns:merchantTransactionTimestamp>-->
          <xsl:if test="/ns0:Root-Element/ns0:authCode and $bodyRequest/ns1:Root-Element/ns1:channel = 'debit'">
            <tns:authCode>
              <xsl:value-of select="/ns0:Root-Element/ns0:authCode"/>
            </tns:authCode>
          </xsl:if>
          <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:transactionId">
            <tns:transactionId>
              <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:transactionId"/>
            </tns:transactionId>
          </xsl:if>
          <!--<tns:transactionTimestamp>
            <xsl:value-of select='xp20:format-dateTime (xp20:current-dateTime ( ), "[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]" )'/>
          </tns:transactionTimestamp>-->
          <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:paymentId">
            <tns:paymentId>
              <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:paymentId"/>
            </tns:paymentId>
          </xsl:if>
          <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:paymentMethod">
            <tns:paymentMethod>
              <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:paymentMethod"/>
            </tns:paymentMethod>
          </xsl:if>
          <xsl:if test="$bodyRequest/ns1:Root-Element/ns1:gatewayId">
            <tns:gatewayId>
              <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:gatewayId"/>
            </tns:gatewayId>
          </xsl:if>
          <tns:amount>
            <xsl:value-of select="$bodyRequest/ns1:Root-Element/ns1:amount"/>
          </tns:amount>
        </tns:authorizationResponse>
      </xsl:if>
      <xsl:if test="/ns0:Root-Element/ns0:md or /ns0:Root-Element/ns0:paRequest or /ns0:Root-Element/ns0:issuerUrl or /ns0:Root-Element/ns0:additionalData/ns0:boletobancario.url       /ns0:Root-Element/ns0:additionalData/ns0:boletobancario.data or /ns0:Root-Element/ns0:additionalData/ns0:boletobancario.barCodeReference or        /ns0:Root-Element/ns0:additionalData/ns0:boletobancario.expirationDate or /ns0:Root-Element/ns0:additionalData/ns0:boletobancario.dueDate">
        <tns:additionalProperties>
          <xsl:if test="/ns0:Root-Element/ns0:md">
            <tns:md>
              <xsl:value-of select="/ns0:Root-Element/ns0:md"/>
            </tns:md>
          </xsl:if>
          <xsl:if test="/ns0:Root-Element/ns0:paRequest">
            <tns:paRequest>
              <xsl:value-of select="/ns0:Root-Element/ns0:paRequest"/>
            </tns:paRequest>
          </xsl:if>
          <xsl:if test="/ns0:Root-Element/ns0:issuerUrl">
            <tns:issueURL>
              <xsl:value-of select="/ns0:Root-Element/ns0:issuerUrl"/>
            </tns:issueURL>
          </xsl:if>
          <xsl:if test="/ns0:Root-Element/ns0:additionalData/ns0:boletobancario.url">
            <tns:boletobancario.url>
              <xsl:value-of select="/ns0:Root-Element/ns0:additionalData/ns0:boletobancario.url"/>
            </tns:boletobancario.url>
          </xsl:if>
          <xsl:if test="/ns0:Root-Element/ns0:additionalData/ns0:boletobancario.data">
            <tns:boletobancario.data>
              <xsl:value-of select="/ns0:Root-Element/ns0:additionalData/ns0:boletobancario.data"/>
            </tns:boletobancario.data>
          </xsl:if>
          <xsl:if test="/ns0:Root-Element/ns0:additionalData/ns0:boletobancario.barCodeReference">
            <tns:boletobancario.barCodeReference>
              <xsl:value-of select="/ns0:Root-Element/ns0:additionalData/ns0:boletobancario.barCodeReference"/>
            </tns:boletobancario.barCodeReference>
          </xsl:if>
          <xsl:if test="/ns0:Root-Element/ns0:additionalData/ns0:boletobancario.expirationDate">
            <tns:boletobancario.expirationDate>
              <xsl:value-of select="/ns0:Root-Element/ns0:additionalData/ns0:boletobancario.expirationDate"/>
            </tns:boletobancario.expirationDate>
          </xsl:if>
          <xsl:if test="/ns0:Root-Element/ns0:additionalData/ns0:boletobancario.dueDate">
            <tns:boletobancario.dueDate>
              <xsl:value-of select="/ns0:Root-Element/ns0:additionalData/ns0:boletobancario.dueDate"/>
            </tns:boletobancario.dueDate>
          </xsl:if>
          <xsl:if test="/ns0:Root-Element/ns0:additionalData/ns0:fraudResultType">
            <n2:fraudResultType>
              <xsl:value-of select="/ns0:Root-Element/ns0:additionalData/ns0:fraudResultType"/>
            </n2:fraudResultType>
          </xsl:if>
          <xsl:if test="/ns0:Root-Element/ns0:additionalData/ns0:fraudManualReview">
            <n2:fraudManualReview>
              <xsl:value-of select="/ns0:Root-Element/ns0:additionalData/ns0:fraudManualReview"/>
            </n2:fraudManualReview>
          </xsl:if>
        </tns:additionalProperties>
      </xsl:if>
    </tns:Root-Element>
  </xsl:template>
</xsl:stylesheet>