<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0"
                xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction"
                xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction"
                xmlns:ns0="http://TargetNamespace.com/AdyenPaymentGateway_authorise_int_request"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions"
                xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction"
                xmlns:tns="http://TargetNamespace.com/AdyenPaymentGateway_authoriseGeneric_request"
                exclude-result-prefixes="xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction"
                xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd">
    <oracle-xsl-mapper:schema>
        <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
        <oracle-xsl-mapper:mapSources>
            <oracle-xsl-mapper:source type="XSD">
                <oracle-xsl-mapper:schema location="../Resources/Generic/nxsd_InterfaceAuthorisePaymentReq.xsd"/>
                <oracle-xsl-mapper:rootElement name="Root-Element"
                                               namespace="http://TargetNamespace.com/AdyenPaymentGateway_authorise_int_request"/>
            </oracle-xsl-mapper:source>
        </oracle-xsl-mapper:mapSources>
        <oracle-xsl-mapper:mapTargets>
            <oracle-xsl-mapper:target type="XSD">
                <oracle-xsl-mapper:schema location="../Resources/Generic/nxsd_authorisePaymentReq.xsd"/>
                <oracle-xsl-mapper:rootElement name="Root-Element"
                                               namespace="http://TargetNamespace.com/AdyenPaymentGateway_authoriseGeneric_request"/>
            </oracle-xsl-mapper:target>
        </oracle-xsl-mapper:mapTargets>
        <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [WED FEB 21 13:12:38 BRT 2018].-->
    </oracle-xsl-mapper:schema>
    <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
    <xsl:param name="merchantAccount"/>
    <xsl:param name="cardencryptedjson"/>
    <xsl:template match="/">
        <tns:Root-Element>
            <xsl:if test="/ns0:Root-Element/ns0:paymentMethod = 'card' or /ns0:Root-Element/ns0:paymentMethod = 'debit' 
            or /ns0:Root-Element/ns0:paymentMethod = 'storeCard' or /ns0:Root-Element/ns0:paymentMethod = 'oneclick'">
                <tns:additionalData>
                    <tns:card.encrypted.json>
                        <xsl:value-of select="$cardencryptedjson"/>
                    </tns:card.encrypted.json>
                    <xsl:if test="/ns0:Root-Element/ns0:paymentMethod = 'debit'">
                        <tns:executeThreeD>true</tns:executeThreeD>
                    </xsl:if>
                </tns:additionalData>
            </xsl:if>
            <xsl:if test="/ns0:Root-Element/ns0:amount">
                <tns:amount>
                    <xsl:if test="/ns0:Root-Element/ns0:amount">
                        <tns:value>
                            <xsl:value-of select="/ns0:Root-Element/ns0:amount"/>
                        </tns:value>
                    </xsl:if>
                    <xsl:if test="/ns0:Root-Element/ns0:currencyCode">
                        <tns:currency>
                            <xsl:value-of select="/ns0:Root-Element/ns0:currencyCode"/>
                        </tns:currency>
                    </xsl:if>
                </tns:amount>
            </xsl:if>
            <xsl:if test="/ns0:Root-Element/ns0:transactionId">
                <tns:reference>
                    <xsl:value-of select="/ns0:Root-Element/ns0:transactionId"/>
                </tns:reference>
            </xsl:if>
            <xsl:if test="/ns0:Root-Element/ns0:billingAddress/ns0:email">
                <tns:shopperEmail>
                    <xsl:value-of select="/ns0:Root-Element/ns0:billingAddress/ns0:email"/>
                </tns:shopperEmail>
            </xsl:if>
            <tns:shopperReference>
                <xsl:value-of select="concat (/ns0:Root-Element/ns0:billingAddress/ns0:firstName, /ns0:Root-Element/ns0:billingAddress/ns0:lastName )"/>
            </tns:shopperReference>
            <xsl:if test="/ns0:Root-Element/ns0:paymentMethod = 'oneclick'">
                <tns:selectedRecurringDetailReference>LATEST</tns:selectedRecurringDetailReference>
            </xsl:if>
            <xsl:if test="/ns0:Root-Element/ns0:paymentMethod = 'oneclick' or /ns0:Root-Element/ns0:paymentMethod = 'storeCard' ">
                <tns:recurring>
                    <tns:contract>ONECLICK</tns:contract>
                </tns:recurring>
            </xsl:if>
            <xsl:if test="/ns0:Root-Element/ns0:billingAddress">
                <tns:billingAddress>
                    <tns:city>
                        <xsl:value-of select="/ns0:Root-Element/ns0:billingAddress/ns0:city"/>
                    </tns:city>
                    <tns:country>
                        <xsl:value-of select="/ns0:Root-Element/ns0:billingAddress/ns0:country"/>
                    </tns:country>
                    <tns:houseNumberOrName>1</tns:houseNumberOrName>
                    <tns:postalCode>
                        <xsl:value-of select="/ns0:Root-Element/ns0:billingAddress/ns0:postalCode"/>
                    </tns:postalCode>
                    <tns:stateOrProvince>
                        <xsl:value-of select="/ns0:Root-Element/ns0:billingAddress/ns0:state"/>
                    </tns:stateOrProvince>
                    <tns:street>
                        <xsl:value-of select="/ns0:Root-Element/ns0:billingAddress/ns0:address1"/>
                    </tns:street>
                </tns:billingAddress>
            </xsl:if>
            <xsl:if test="/ns0:Root-Element/ns0:shippingAddress">
                <tns:deliveryAddress>
                    <tns:city>
                        <xsl:value-of select="/ns0:Root-Element/ns0:shippingAddress/ns0:city"/>
                    </tns:city>
                    <tns:country>
                        <xsl:value-of select="/ns0:Root-Element/ns0:shippingAddress/ns0:country"/>
                    </tns:country>
                    <tns:houseNumberOrName>1</tns:houseNumberOrName>
                    <tns:postalCode>
                        <xsl:value-of select="/ns0:Root-Element/ns0:shippingAddress/ns0:postalCode"/>
                    </tns:postalCode>
                    <tns:stateOrProvince>
                        <xsl:value-of select="/ns0:Root-Element/ns0:shippingAddress/ns0:state"/>
                    </tns:stateOrProvince>
                    <tns:street>
                        <xsl:value-of select="/ns0:Root-Element/ns0:shippingAddress/ns0:address1"/>
                    </tns:street>
                </tns:deliveryAddress>
            </xsl:if>
            <xsl:if test="/ns0:Root-Element/ns0:billingAddress/ns0:phoneNumber">
                <tns:telephoneNumber>
                    <xsl:value-of select="/ns0:Root-Element/ns0:billingAddress/ns0:phoneNumber"/>
                </tns:telephoneNumber>
            </xsl:if>
            <tns:deliveryDate>
                <xsl:value-of select="xp20:current-dateTime ( )"/>
            </tns:deliveryDate>
            <xsl:if test="/ns0:Root-Element/ns0:paymentMethod = 'invoice'">
                <tns:selectedBrand>boletobancario_santander</tns:selectedBrand>
            </xsl:if>
            <xsl:if test="/ns0:Root-Element/ns0:billingAddress/ns0:firstName">
                <tns:shopperName>
                    <tns:firstName>
                        <xsl:value-of select="/ns0:Root-Element/ns0:billingAddress/ns0:firstName"/>
                    </tns:firstName>
                    <tns:lastName>
                        <xsl:value-of select="/ns0:Root-Element/ns0:billingAddress/ns0:lastName"/>
                    </tns:lastName>
                </tns:shopperName>
            </xsl:if>
            <xsl:if test="/ns0:Root-Element/ns0:customProperties/ns0:md">
                <tns:md>
                    <xsl:value-of select="/ns0:Root-Element/ns0:customProperties/ns0:md"/>
                </tns:md>
            </xsl:if>
            <xsl:if test="/ns0:Root-Element/ns0:customProperties/ns0:paResponse">
                <tns:paResponse>
                    <xsl:value-of select="/ns0:Root-Element/ns0:customProperties/ns0:paResponse"/>
                </tns:paResponse>
            </xsl:if>
            <xsl:if test="/ns0:Root-Element/ns0:paymentMethod = 'invoice'">
                <tns:shopperStatement>Aceitar o pagamento até 15 dias após o vencimento; Não cobrar juros. Não aceitar o
                                      pagamento com cheque</tns:shopperStatement>
                <tns:socialSecurityNumber>
                    <xsl:value-of select="/ns0:Root-Element/ns0:customProperties/ns0:shopperCPF"/>
                </tns:socialSecurityNumber>
            </xsl:if>
            <tns:merchantAccount>
                <xsl:value-of select="$merchantAccount"/>
            </tns:merchantAccount>
        </tns:Root-Element>
    </xsl:template>
</xsl:stylesheet>
